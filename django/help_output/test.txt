usage: manage.py test [-h] [--version] [-v {0,1,2,3}] [--settings SETTINGS]
                      [--pythonpath PYTHONPATH] [--traceback] [--no-color]
                      [--noinput] [--failfast] [--testrunner TESTRUNNER]
                      [--liveserver LIVESERVER] [-t TOP_LEVEL]
                      [--pattern PATTERN] [-k] [-r] [--debug-sql]
                      [--parallel [N]] [-p] [--verbose]
                      [--nose-verbosity NOSE_VERBOSITY] [-q] [-c FILES]
                      [-w WHERE] [--py3where PY3WHERE] [-m REGEX]
                      [--tests NAMES] [-l DEBUG] [--debug-log FILE]
                      [--logging-config FILE] [-I REGEX] [-e REGEX] [-i REGEX]
                      [-x] [-P] [--exe] [--noexe] [--traverse-namespace]
                      [--first-package-wins] [--no-byte-compile]
                      [--with-test-timer] [--with-olfaction]
                      [--olfaction-output-tsv] [--olfaction-no-strip-prefix]
                      [--olfaction-accumulate] [--olfaction-show-all-contexts]
                      [--only-selenium-tests] [--only-legacy-selenium-tests]
                      [--only-new-selenium-tests]
                      [--selenium-config-preset SELENIUM_CONFIG_PRESET]
                      [--selenium-remote-driver-url SELENIUM_REMOTE_DRIVER_URL]
                      [--selenium-liveserver-external-url SELENIUM_LIVESERVER_EXTERNAL_URL]
                      [--with-seleniumnosefilter] [--with-memory-usage]
                      [--memory-usage-file MEMORY_USAGE_FILE]
                      [--memory-usage-no-truncate] [--memory-usage-no-sort]
                      [--with-fixture-bundling] [--with-progressive]
                      [--progressive-editor EDITOR] [--progressive-abs]
                      [--progressive-advisories] [--progressive-with-styling]
                      [--progressive-with-bar]
                      [--progressive-function-color FUNCTION_COLOR]
                      [--progressive-dim-color DIM_COLOR]
                      [--progressive-bar-filled-color BAR_FILLED_COLOR]
                      [--progressive-bar-empty-color BAR_EMPTY_COLOR]
                      [--progressive-editor-shortcut-template EDITOR_SHORTCUT_TEMPLATE]
                      [-a ATTR] [-A EXPR] [-s] [--nologcapture]
                      [--logging-format FORMAT] [--logging-datefmt FORMAT]
                      [--logging-filter FILTER] [--logging-clear-handlers]
                      [--logging-level LOGCAPTURE_LEVEL] [--with-coverage]
                      [--cover-package PACKAGE] [--cover-erase]
                      [--cover-tests]
                      [--cover-min-percentage COVER_MIN_PERCENTAGE]
                      [--cover-inclusive] [--cover-html]
                      [--cover-html-dir DIR] [--cover-branches] [--cover-xml]
                      [--cover-xml-file FILE] [--pdb] [--pdb-failures]
                      [--pdb-errors] [--no-deprecated] [--with-doctest]
                      [--doctest-tests] [--doctest-extension EXT]
                      [--doctest-result-variable VAR]
                      [--doctest-fixtures SUFFIX] [--doctest-options OPTIONS]
                      [--with-isolation] [-d] [--with-profile]
                      [--profile-sort SORT] [--profile-stats-file FILE]
                      [--profile-restrict RESTRICT] [--no-skip] [--with-id]
                      [--id-file FILE] [--failed] [--processes NUM]
                      [--process-timeout SECONDS] [--process-restartworker]
                      [--with-xunit] [--xunit-file FILE]
                      [--xunit-testsuite-name PACKAGE] [--all-modules]
                      [--collect-only] [--run-all] [--no-clean] [--no-destroy]
                      [--retest] [--no-test-db] [--enable-all-loggers]
                      [--no-compile-assets]
                      [test_label [test_label ...]]

Discover and run tests in the specified modules or the current directory.

positional arguments:
  test_label            Module paths to test; can be modulename,
                        modulename.TestCase or modulename.TestCase.test_method

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -v {0,1,2,3}, --verbosity {0,1,2,3}
                        Verbosity level; 0=minimal output, 1=normal output,
                        2=verbose output, 3=very verbose output
  --settings SETTINGS   The Python path to a settings module, e.g.
                        "myproject.settings.main". If this isn't provided, the
                        DJANGO_SETTINGS_MODULE environment variable will be
                        used.
  --pythonpath PYTHONPATH
                        A directory to add to the Python path, e.g.
                        "/home/djangoprojects/myproject".
  --traceback           Raise on CommandError exceptions
  --no-color            Don't colorize the command output.
  --noinput, --no-input
                        Tells Django to NOT prompt the user for input of any
                        kind.
  --failfast            Tells Django to stop running the test suite after
                        first failed test.
  --testrunner TESTRUNNER
                        Tells Django to use specified test runner class
                        instead of the one specified by the TEST_RUNNER
                        setting.
  --liveserver LIVESERVER
                        Overrides the default address where the live server
                        (used with LiveServerTestCase) is expected to run
                        from. The default value is localhost:8081-8179.
  -t TOP_LEVEL, --top-level-directory TOP_LEVEL
                        Top level of project for unittest discovery.
  --pattern PATTERN     The test matching pattern. Defaults to test*.py.
  -k, --keepdb          Preserves the test DB between runs.
  -r, --reverse         Reverses test cases order.
  --debug-sql           Prints logged SQL queries on failure.
  --parallel [N]        Run tests using up to N parallel processes.
  -p, --plugins         Output list of available plugins and exit. Combine
                        with higher verbosity for greater detail
  --verbose             Be more verbose. [NOSE_VERBOSE]
  --nose-verbosity NOSE_VERBOSITY
                        Set verbosity; --verbosity=2 is the same as -v
  -q, --quiet           Be less verbose
  -c FILES, --config FILES
                        Load configuration from config file(s). May be
                        specified multiple times; in that case, all config
                        files will be loaded and combined
  -w WHERE, --where WHERE
                        Look for tests in this directory. May be specified
                        multiple times. The first directory passed will be
                        used as the working directory, in place of the current
                        working directory, which is the default. Others will
                        be added to the list of tests to execute. [NOSE_WHERE]
  --py3where PY3WHERE   Look for tests in this directory under Python 3.x.
                        Functions the same as 'where', but only applies if
                        running under Python 3.x or above. Note that, if
                        present under 3.x, this option completely replaces any
                        directories specified with 'where', so the 'where'
                        option becomes ineffective. [NOSE_PY3WHERE]
  -m REGEX, --match REGEX
                        Files, directories, function names, and class names
                        that match this regular expression are considered
                        tests. Default: (?:^|[\b_\./-])[Tt]est
                        [NOSE_TESTMATCH]
  --tests NAMES         Run these tests (comma-separated list). This argument
                        is useful mainly from configuration files; on the
                        command line, just pass the tests to run as additional
                        arguments with no switch.
  -l DEBUG, --debug DEBUG
                        Activate debug logging for one or more systems.
                        Available debug loggers: nose, nose.importer,
                        nose.inspector, nose.plugins, nose.result and
                        nose.selector. Separate multiple names with a comma.
  --debug-log FILE      Log debug messages to this file (default: sys.stderr)
  --logging-config FILE
                        Load logging config from this file -- bypasses all
                        other logging config settings.
  -I REGEX, --ignore-files REGEX
                        Completely ignore any file that matches this regular
                        expression. Takes precedence over any other settings
                        or plugins. Specifying this option will replace the
                        default setting. Specify this option multiple times to
                        add more regular expressions [NOSE_IGNORE_FILES]
  -e REGEX, --exclude REGEX
                        Don't run tests that match regular expression
                        [NOSE_EXCLUDE]
  -i REGEX, --include REGEX
                        This regular expression will be applied to files,
                        directories, function names, and class names for a
                        chance to include additional tests that do not match
                        TESTMATCH. Specify this option multiple times to add
                        more regular expressions [NOSE_INCLUDE]
  -x, --stop            Stop running tests after the first error or failure
  -P, --no-path-adjustment
                        Don't make any changes to sys.path when loading tests
                        [NOSE_NOPATH]
  --exe                 Look for tests in python modules that are executable.
                        Normal behavior is to exclude executable modules,
                        since they may not be import-safe [NOSE_INCLUDE_EXE]
  --noexe               DO NOT look for tests in python modules that are
                        executable. (The default on the windows platform is to
                        do so.)
  --traverse-namespace  Traverse through all path entries of a namespace
                        package
  --first-package-wins  nose's importer will normally evict a package from
                        sys.modules if it sees a package with the same name in
                        a different location. Set this option to disable that
                        behavior.
  --no-byte-compile     Prevent nose from byte-compiling the source into .pyc
                        files while nose is scanning for and running tests.
  --with-test-timer     Enable plugin TestTimer: This plugin provides test
                        timings [NOSE_WITH_TEST_TIMER]
  --with-olfaction      Enable plugin DjangoNoseOlfactionPlugin: Sniffs out
                        the unique aroma each test produces. Features that it
                        tracks for each test are: * test duration * number of
                        queries executed * more? [NOSE_WITH_OLFACTION]
  --olfaction-output-tsv
                        Enable outputting in tsv format.
  --olfaction-no-strip-prefix
                        Strip common prefixes from test names.
  --olfaction-accumulate
                        Accumulate test/context values to contribute to their
                        parent contexts.
  --olfaction-show-all-contexts
                        Show all contexts, even those without fixtures.
  --only-selenium-tests
                        Only run legacy or new Selenium tests.
  --only-legacy-selenium-tests
                        Run legacy Selenium tests. This option will be removed
                        in a future version.
  --only-new-selenium-tests
                        Only run new Selenium tests. This option will be
                        removed in a future version.
  --selenium-config-preset SELENIUM_CONFIG_PRESET
                        Selenium driver config preset, choose one from: local-
                        chrome, local-chrome-xvfb, local-firefox, local-
                        phantomjs, remote-android-nexus7, remote-chrome,
                        remote-chrome-mobile, remote-edge-win10, remote-
                        firefox, remote-ie10, remote-ie11, remote-ie11-win7,
                        remote-ie8, remote-ie9, remote-ipad, remote-iphone,
                        remote-iphone6-ios10, remote-iphone6-ios9
  --selenium-remote-driver-url SELENIUM_REMOTE_DRIVER_URL
                        Selenium remote driver URL
  --selenium-liveserver-external-url SELENIUM_LIVESERVER_EXTERNAL_URL
                        Set this if your browser needs to use a URL different
                        from your Django liveserver URL. For example if your
                        liveserever runs at 0.0.0.0:8081 but you need to put
                        devtest.local:8081 in your browser, then set this to
                        http://devtest.local:8081.
  --with-seleniumnosefilter
                        Enable plugin LegacySeleniumNoseFilter: A nose filter
                        for Selenium tests. By default, we skip all
                        SeleniumBase subclasses by not picking them during the
                        selection stage. Cf. http://nose.readthedocs.org/en/la
                        test/api/selector.html Note: This filter can be used
                        to pick up both legacy SeleniumBase and
                        selenium_setup_helper's SeleniumDjangoTestCase tests.
                        [NOSE_WITH_SELENIUMNOSEFILTER]
  --with-memory-usage   Output information about test memory usage.
  --memory-usage-file MEMORY_USAGE_FILE
                        Output information about test memory usage.
  --memory-usage-no-truncate
                        Do not truncate output file before run.
  --memory-usage-no-sort
                        Do not sort output file after run.
  --with-fixture-bundling
                        Load a unique set of fixtures only once, even across
                        test classes. [NOSE_WITH_FIXTURE_BUNDLING]
  --with-progressive    Enable plugin ProgressivePlugin: A nose plugin which
                        has a progress bar and formats tracebacks for humans
                        [NOSE_WITH_PROGRESSIVE]
  --progressive-editor EDITOR
                        The editor to use for the shortcuts in tracebacks.
                        Defaults to the value of $EDITOR and then "vi".
                        [NOSE_PROGRESSIVE_EDITOR]
  --progressive-abs     Display paths in traceback as absolute, rather than
                        relative to the current working directory.
                        [NOSE_PROGRESSIVE_ABSOLUTE_PATHS]
  --progressive-advisories
                        Show skips and deprecation exceptions in addition to
                        failures and errors. [NOSE_PROGRESSIVE_ADVISORIES]
  --progressive-with-styling
                        nose-progressive automatically omits bold and color
                        formatting when its output is directed to a non-
                        terminal. Specifying --progressive-with-styling forces
                        such styling to be output regardless.
                        [NOSE_PROGRESSIVE_WITH_STYLING]
  --progressive-with-bar
                        nose-progressive automatically omits the progress bar
                        when its output is directed to a non-terminal.
                        Specifying --progressive-with-bar forces the bar to be
                        output regardless. This option implies --progressive-
                        with-styling. [NOSE_PROGRESSIVE_WITH_BAR]
  --progressive-function-color FUNCTION_COLOR
                        Color of function names in tracebacks. An ANSI color
                        expressed as a number 0-15.
                        [NOSE_PROGRESSIVE_FUNCTION_COLOR]
  --progressive-dim-color DIM_COLOR
                        Color of de-emphasized text (like editor shortcuts) in
                        tracebacks. An ANSI color expressed as a number 0-15.
                        [NOSE_PROGRESSIVE_DIM_COLOR]
  --progressive-bar-filled-color BAR_FILLED_COLOR
                        Color of the progress bar's filled portion. An ANSI
                        color expressed as a number 0-15.
                        [NOSE_PROGRESSIVE_BAR_FILLED_COLOR]
  --progressive-bar-empty-color BAR_EMPTY_COLOR
                        Color of the progress bar's empty portion. An ANSI
                        color expressed as a number 0-15.
                        [NOSE_PROGRESSIVE_BAR_EMPTY_COLOR]
  --progressive-editor-shortcut-template EDITOR_SHORTCUT_TEMPLATE
                        A str.format() template for the non-code lines of the
                        traceback. [NOSE_PROGRESSIVE_EDITOR_SHORTCUT_TEMPLATE]
  -a ATTR, --attr ATTR  Run only tests that have attributes specified by ATTR
                        [NOSE_ATTR]
  -A EXPR, --eval-attr EXPR
                        Run only tests for whose attributes the Python
                        expression EXPR evaluates to True [NOSE_EVAL_ATTR]
  -s, --nocapture       Don't capture stdout (any stdout output will be
                        printed immediately) [NOSE_NOCAPTURE]
  --nologcapture        Disable logging capture plugin. Logging configuration
                        will be left intact. [NOSE_NOLOGCAPTURE]
  --logging-format FORMAT
                        Specify custom format to print statements. Uses the
                        same format as used by standard logging handlers.
                        [NOSE_LOGFORMAT]
  --logging-datefmt FORMAT
                        Specify custom date/time format to print statements.
                        Uses the same format as used by standard logging
                        handlers. [NOSE_LOGDATEFMT]
  --logging-filter FILTER
                        Specify which statements to filter in/out. By default,
                        everything is captured. If the output is too verbose,
                        use this option to filter out needless output.
                        Example: filter=foo will capture statements issued
                        ONLY to foo or foo.what.ever.sub but not foobar or
                        other logger. Specify multiple loggers with comma:
                        filter=foo,bar,baz. If any logger name is prefixed
                        with a minus, eg filter=-foo, it will be excluded
                        rather than included. Default: exclude logging
                        messages from nose itself (-nose). [NOSE_LOGFILTER]
  --logging-clear-handlers
                        Clear all other logging handlers
  --logging-level LOGCAPTURE_LEVEL
                        Set the log level to capture
  --with-coverage       Enable plugin Coverage: Activate a coverage report
                        using Ned Batchelder's coverage module.
                        [NOSE_WITH_COVERAGE]
  --cover-package PACKAGE
                        Restrict coverage output to selected packages
                        [NOSE_COVER_PACKAGE]
  --cover-erase         Erase previously collected coverage statistics before
                        run
  --cover-tests         Include test modules in coverage report
                        [NOSE_COVER_TESTS]
  --cover-min-percentage COVER_MIN_PERCENTAGE
                        Minimum percentage of coverage for tests to pass
                        [NOSE_COVER_MIN_PERCENTAGE]
  --cover-inclusive     Include all python files under working directory in
                        coverage report. Useful for discovering holes in test
                        coverage if not all files are imported by the test
                        suite. [NOSE_COVER_INCLUSIVE]
  --cover-html          Produce HTML coverage information
  --cover-html-dir DIR  Produce HTML coverage information in dir
  --cover-branches      Include branch coverage in coverage report
                        [NOSE_COVER_BRANCHES]
  --cover-xml           Produce XML coverage information
  --cover-xml-file FILE
                        Produce XML coverage information in file
  --pdb                 Drop into debugger on failures or errors
  --pdb-failures        Drop into debugger on failures
  --pdb-errors          Drop into debugger on errors
  --no-deprecated       Disable special handling of DeprecatedTest exceptions.
  --with-doctest        Enable plugin Doctest: Activate doctest plugin to find
                        and run doctests in non-test modules.
                        [NOSE_WITH_DOCTEST]
  --doctest-tests       Also look for doctests in test modules. Note that
                        classes, methods and functions should have either
                        doctests or non-doctest tests, not both.
                        [NOSE_DOCTEST_TESTS]
  --doctest-extension EXT
                        Also look for doctests in files with this extension
                        [NOSE_DOCTEST_EXTENSION]
  --doctest-result-variable VAR
                        Change the variable name set to the result of the last
                        interpreter command from the default '_'. Can be used
                        to avoid conflicts with the _() function used for text
                        translation. [NOSE_DOCTEST_RESULT_VAR]
  --doctest-fixtures SUFFIX
                        Find fixtures for a doctest file in module with this
                        name appended to the base name of the doctest file
  --doctest-options OPTIONS
                        Specify options to pass to doctest. Eg.
                        '+ELLIPSIS,+NORMALIZE_WHITESPACE'
  --with-isolation      Enable plugin IsolationPlugin: Activate the isolation
                        plugin to isolate changes to external modules to a
                        single test module or package. The isolation plugin
                        resets the contents of sys.modules after each test
                        module or package runs to its state before the test.
                        PLEASE NOTE that this plugin should not be used with
                        the coverage plugin, or in any other case where module
                        reloading may produce undesirable side-effects.
                        [NOSE_WITH_ISOLATION]
  -d, --detailed-errors
                        Add detail to error output by attempting to evaluate
                        failed asserts [NOSE_DETAILED_ERRORS]
  --with-profile        Enable plugin Profile: Use this plugin to run tests
                        using the hotshot profiler. [NOSE_WITH_PROFILE]
  --profile-sort SORT   Set sort order for profiler output
  --profile-stats-file FILE
                        Profiler stats file; default is a new temp file on
                        each run
  --profile-restrict RESTRICT
                        Restrict profiler output. See help for pstats.Stats
                        for details
  --no-skip             Disable special handling of SkipTest exceptions.
  --with-id             Enable plugin TestId: Activate to add a test id (like
                        #1) to each test name output. Activate with --failed
                        to rerun failing tests only. [NOSE_WITH_ID]
  --id-file FILE        Store test ids found in test runs in this file.
                        Default is the file .noseids in the working directory.
  --failed              Run the tests that failed in the last test run.
  --processes NUM       Spread test run among this many processes. Set a
                        number equal to the number of processors or cores in
                        your machine for best results. Pass a negative number
                        to have the number of processes automatically set to
                        the number of cores. Passing 0 means to disable
                        parallel testing. Default is 0 unless NOSE_PROCESSES
                        is set. [NOSE_PROCESSES]
  --process-timeout SECONDS
                        Set timeout for return of results from each test
                        runner process. Default is 10. [NOSE_PROCESS_TIMEOUT]
  --process-restartworker
                        If set, will restart each worker process once their
                        tests are done, this helps control memory leaks from
                        killing the system. [NOSE_PROCESS_RESTARTWORKER]
  --with-xunit          Enable plugin Xunit: This plugin provides test results
                        in the standard XUnit XML format. [NOSE_WITH_XUNIT]
  --xunit-file FILE     Path to xml file to store the xunit report in. Default
                        is nosetests.xml in the working directory
                        [NOSE_XUNIT_FILE]
  --xunit-testsuite-name PACKAGE
                        Name of the testsuite in the xunit xml, generated by
                        plugin. Default test suite name is nosetests.
  --all-modules         Enable plugin AllModules: Collect tests from all
                        python modules. [NOSE_ALL_MODULES]
  --collect-only        Enable collect-only: Collect and output test names
                        only, don't run any tests. [COLLECT_ONLY]
  --run-all             Run all supported tests, including those we skip by
                        default.
  --no-clean            Don't recreate the test database.
  --no-destroy          Don't teardown the test database.
  --retest              Implies --no-clean and --no-destroy.
  --no-test-db          Don't use the test database. Implies --retest.
  --enable-all-loggers  Reenable all of the suppressed logging handlers.
  --no-compile-assets   Do not compile static assets before running the tests.
