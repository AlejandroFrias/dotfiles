usage: manage.py reprocess_regression_batch [-h] [--version] [-v {0,1,2,3}]
                                            [--settings SETTINGS]
                                            [--pythonpath PYTHONPATH]
                                            [--traceback] [--no-color]
                                            [-r DIR] [-t DIR] [-o DIR] [-f]
                                            [args [args ...]]

Reprocesses a batchdata file for the regression tests. The advantage of using
this file over process_batch is that you do not need a settings_science.py
file because the batchrecord data is already in the assay test data folder.
IMPORTANT: This is to only be used for updating the regression test batchdata
files in the event that there is a change to the calling code that causes the
regression tests to fail. You MUST verify that the delta between the old
batchdata file and the new batchdata file are consistent with our
expectations. Do NOT just blindly update the batchdata file in order to get
the tests to pass, that obviates the entire point of these regression tests.

positional arguments:
  args

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -v {0,1,2,3}, --verbosity {0,1,2,3}
                        Verbosity level; 0=minimal output, 1=normal output,
                        2=verbose output, 3=very verbose output
  --settings SETTINGS   The Python path to a settings module, e.g.
                        "myproject.settings.main". If this isn't provided, the
                        DJANGO_SETTINGS_MODULE environment variable will be
                        used.
  --pythonpath PYTHONPATH
                        A directory to add to the Python path, e.g.
                        "/home/djangoprojects/myproject".
  --traceback           Raise on CommandError exceptions
  --no-color            Don't colorize the command output.
  -r DIR, --root-dir DIR
                        Root directory DIR for the batch rawdata.
  -t DIR, --taqman-ad-training-dir DIR
                        Root directory DIR for TaqMan AD training data.
  -o DIR, --out-dir DIR
                        Output directory DIR for the batchdata JSON file.
  -f, --force           Force output of batchdata JSON, may overwrite existing
                        batchdata JSON.
