usage: manage.py create_command [-h] [--version] [-v {0,1,2,3}]
                                [--settings SETTINGS]
                                [--pythonpath PYTHONPATH] [--traceback]
                                [--no-color] [--name COMMAND_NAME]
                                [--base BASE_COMMAND] [--dry-run]
                                app_label [app_label ...]

Creates a Django management command directory structure for the given app name
in the app's directory.

positional arguments:
  app_label             One or more application label.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -v {0,1,2,3}, --verbosity {0,1,2,3}
                        Verbosity level; 0=minimal output, 1=normal output,
                        2=verbose output, 3=very verbose output
  --settings SETTINGS   The Python path to a settings module, e.g.
                        "myproject.settings.main". If this isn't provided, the
                        DJANGO_SETTINGS_MODULE environment variable will be
                        used.
  --pythonpath PYTHONPATH
                        A directory to add to the Python path, e.g.
                        "/home/djangoprojects/myproject".
  --traceback           Raise on CommandError exceptions
  --no-color            Don't colorize the command output.
  --name COMMAND_NAME, -n COMMAND_NAME
                        The name to use for the management command
  --base BASE_COMMAND, -b BASE_COMMAND
                        The base class used for implementation of this
                        command. Should be one of Base, App, Label, or NoArgs
  --dry-run             Do not actually create any files
